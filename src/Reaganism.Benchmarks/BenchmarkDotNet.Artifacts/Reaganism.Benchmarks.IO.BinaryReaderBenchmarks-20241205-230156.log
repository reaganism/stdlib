// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 4 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:IntermediateOutputPath="C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\obj\Release\net9.0/" /p:OutDir="C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\bin\Release\net9.0/" /p:OutputPath="C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\bin\Release\net9.0/" in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96
// command took 1.1 sec and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:IntermediateOutputPath="C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\obj\Release\net9.0/" /p:OutDir="C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\bin\Release\net9.0/" /p:OutputPath="C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\bin\Release\net9.0/" --output "C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\bin\Release\net9.0/" in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96
// command took 6.23 sec and exited with 0
// ***** Done, took 00:00:07 (7.38 sec)   *****
// Found 4 benchmarks:
//   BinaryReaderBenchmarks.NetBinaryReaderRead: DefaultJob
//   BinaryReaderBenchmarks.CustomBinaryReaderRead: DefaultJob
//   BinaryReaderBenchmarks.CustomBinaryReaderLeRead: DefaultJob
//   BinaryReaderBenchmarks.CustomBinaryReaderBeRead: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: BinaryReaderBenchmarks.NetBinaryReaderRead: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 82aff6d2-f349-4d09-89e4-8630ece90b96.dll --anonymousPipes 1384 1392 --benchmarkName Reaganism.Benchmarks.IO.BinaryReaderBenchmarks.NetBinaryReaderRead --job Default --benchmarkId 0 in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\bin\Release\net9.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.14.0
// Runtime=.NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 154300.00 ns, 154.3000 us/op
WorkloadJitting  1: 1 op, 2955900.00 ns, 2.9559 ms/op

OverheadJitting  2: 16 op, 129900.00 ns, 8.1188 us/op
WorkloadJitting  2: 16 op, 22529000.00 ns, 1.4081 ms/op

WorkloadPilot    1: 16 op, 22481600.00 ns, 1.4051 ms/op
WorkloadPilot    2: 32 op, 45487900.00 ns, 1.4215 ms/op
WorkloadPilot    3: 64 op, 90012100.00 ns, 1.4064 ms/op
WorkloadPilot    4: 128 op, 129405200.00 ns, 1.0110 ms/op
WorkloadPilot    5: 256 op, 190524900.00 ns, 744.2379 us/op
WorkloadPilot    6: 512 op, 357060500.00 ns, 697.3838 us/op
WorkloadPilot    7: 1024 op, 885574500.00 ns, 864.8188 us/op

OverheadWarmup   1: 1024 op, 3100.00 ns, 3.0273 ns/op
OverheadWarmup   2: 1024 op, 2200.00 ns, 2.1484 ns/op
OverheadWarmup   3: 1024 op, 2000.00 ns, 1.9531 ns/op
OverheadWarmup   4: 1024 op, 2100.00 ns, 2.0508 ns/op
OverheadWarmup   5: 1024 op, 2100.00 ns, 2.0508 ns/op
OverheadWarmup   6: 1024 op, 1900.00 ns, 1.8555 ns/op
OverheadWarmup   7: 1024 op, 1900.00 ns, 1.8555 ns/op

OverheadActual   1: 1024 op, 2000.00 ns, 1.9531 ns/op
OverheadActual   2: 1024 op, 3200.00 ns, 3.1250 ns/op
OverheadActual   3: 1024 op, 2300.00 ns, 2.2461 ns/op
OverheadActual   4: 1024 op, 2100.00 ns, 2.0508 ns/op
OverheadActual   5: 1024 op, 2100.00 ns, 2.0508 ns/op
OverheadActual   6: 1024 op, 2100.00 ns, 2.0508 ns/op
OverheadActual   7: 1024 op, 2200.00 ns, 2.1484 ns/op
OverheadActual   8: 1024 op, 2000.00 ns, 1.9531 ns/op
OverheadActual   9: 1024 op, 2100.00 ns, 2.0508 ns/op
OverheadActual  10: 1024 op, 2200.00 ns, 2.1484 ns/op
OverheadActual  11: 1024 op, 2300.00 ns, 2.2461 ns/op
OverheadActual  12: 1024 op, 2300.00 ns, 2.2461 ns/op
OverheadActual  13: 1024 op, 2000.00 ns, 1.9531 ns/op
OverheadActual  14: 1024 op, 1900.00 ns, 1.8555 ns/op
OverheadActual  15: 1024 op, 2000.00 ns, 1.9531 ns/op
OverheadActual  16: 1024 op, 2000.00 ns, 1.9531 ns/op
OverheadActual  17: 1024 op, 1900.00 ns, 1.8555 ns/op
OverheadActual  18: 1024 op, 2000.00 ns, 1.9531 ns/op
OverheadActual  19: 1024 op, 3300.00 ns, 3.2227 ns/op
OverheadActual  20: 1024 op, 2900.00 ns, 2.8320 ns/op

WorkloadWarmup   1: 1024 op, 750032900.00 ns, 732.4540 us/op
WorkloadWarmup   2: 1024 op, 719213400.00 ns, 702.3568 us/op
WorkloadWarmup   3: 1024 op, 706348400.00 ns, 689.7934 us/op
WorkloadWarmup   4: 1024 op, 742636600.00 ns, 725.2311 us/op
WorkloadWarmup   5: 1024 op, 776836400.00 ns, 758.6293 us/op
WorkloadWarmup   6: 1024 op, 769274100.00 ns, 751.2442 us/op
WorkloadWarmup   7: 1024 op, 725770700.00 ns, 708.7604 us/op
WorkloadWarmup   8: 1024 op, 754269600.00 ns, 736.5914 us/op
WorkloadWarmup   9: 1024 op, 747491300.00 ns, 729.9720 us/op

// BeforeActualRun
WorkloadActual   1: 1024 op, 713597900.00 ns, 696.8729 us/op
WorkloadActual   2: 1024 op, 720298600.00 ns, 703.4166 us/op
WorkloadActual   3: 1024 op, 732143700.00 ns, 714.9841 us/op
WorkloadActual   4: 1024 op, 743402100.00 ns, 725.9786 us/op
WorkloadActual   5: 1024 op, 744453500.00 ns, 727.0054 us/op
WorkloadActual   6: 1024 op, 771271400.00 ns, 753.1947 us/op
WorkloadActual   7: 1024 op, 740609500.00 ns, 723.2515 us/op
WorkloadActual   8: 1024 op, 730479900.00 ns, 713.3593 us/op
WorkloadActual   9: 1024 op, 703200300.00 ns, 686.7190 us/op
WorkloadActual  10: 1024 op, 709858900.00 ns, 693.2216 us/op
WorkloadActual  11: 1024 op, 714882600.00 ns, 698.1275 us/op
WorkloadActual  12: 1024 op, 714439800.00 ns, 697.6951 us/op
WorkloadActual  13: 1024 op, 712450700.00 ns, 695.7526 us/op
WorkloadActual  14: 1024 op, 719570800.00 ns, 702.7059 us/op
WorkloadActual  15: 1024 op, 711937100.00 ns, 695.2511 us/op
WorkloadActual  16: 1024 op, 738750400.00 ns, 721.4359 us/op
WorkloadActual  17: 1024 op, 728611000.00 ns, 711.5342 us/op
WorkloadActual  18: 1024 op, 766409400.00 ns, 748.4467 us/op
WorkloadActual  19: 1024 op, 712288500.00 ns, 695.5942 us/op
WorkloadActual  20: 1024 op, 719161700.00 ns, 702.3063 us/op
WorkloadActual  21: 1024 op, 711392800.00 ns, 694.7195 us/op
WorkloadActual  22: 1024 op, 704680000.00 ns, 688.1641 us/op
WorkloadActual  23: 1024 op, 709340000.00 ns, 692.7148 us/op

// AfterActualRun
WorkloadResult   1: 1024 op, 713595800.00 ns, 696.8709 us/op
WorkloadResult   2: 1024 op, 720296500.00 ns, 703.4146 us/op
WorkloadResult   3: 1024 op, 732141600.00 ns, 714.9820 us/op
WorkloadResult   4: 1024 op, 743400000.00 ns, 725.9766 us/op
WorkloadResult   5: 1024 op, 744451400.00 ns, 727.0033 us/op
WorkloadResult   6: 1024 op, 740607400.00 ns, 723.2494 us/op
WorkloadResult   7: 1024 op, 730477800.00 ns, 713.3572 us/op
WorkloadResult   8: 1024 op, 703198200.00 ns, 686.7170 us/op
WorkloadResult   9: 1024 op, 709856800.00 ns, 693.2195 us/op
WorkloadResult  10: 1024 op, 714880500.00 ns, 698.1255 us/op
WorkloadResult  11: 1024 op, 714437700.00 ns, 697.6931 us/op
WorkloadResult  12: 1024 op, 712448600.00 ns, 695.7506 us/op
WorkloadResult  13: 1024 op, 719568700.00 ns, 702.7038 us/op
WorkloadResult  14: 1024 op, 711935000.00 ns, 695.2490 us/op
WorkloadResult  15: 1024 op, 738748300.00 ns, 721.4339 us/op
WorkloadResult  16: 1024 op, 728608900.00 ns, 711.5321 us/op
WorkloadResult  17: 1024 op, 766407300.00 ns, 748.4446 us/op
WorkloadResult  18: 1024 op, 712286400.00 ns, 695.5922 us/op
WorkloadResult  19: 1024 op, 719159600.00 ns, 702.3043 us/op
WorkloadResult  20: 1024 op, 711390700.00 ns, 694.7175 us/op
WorkloadResult  21: 1024 op, 704677900.00 ns, 688.1620 us/op
WorkloadResult  22: 1024 op, 709337900.00 ns, 692.7128 us/op
// GC:  0 0 0 122992 1024
// Threading:  0 0 1024

// AfterAll
// Benchmark Process 41516 has exited with code 0.

Mean = 705.873 μs, StdErr = 3.314 μs (0.47%), N = 22, StdDev = 15.545 μs
Min = 686.717 μs, Q1 = 695.335 μs, Median = 700.215 μs, Q3 = 714.576 μs, Max = 748.445 μs
IQR = 19.241 μs, LowerFence = 666.473 μs, UpperFence = 743.437 μs
ConfidenceInterval = [693.216 μs; 718.531 μs] (CI 99.9%), Margin = 12.657 μs (1.79% of Mean)
Skewness = 0.99, Kurtosis = 3.24, MValue = 2

// ** Remained 3 (75.0%) benchmark(s) to run. Estimated finish 2024-12-05 23:03 (0h 1m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: BinaryReaderBenchmarks.CustomBinaryReaderRead: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 82aff6d2-f349-4d09-89e4-8630ece90b96.dll --anonymousPipes 1540 1544 --benchmarkName Reaganism.Benchmarks.IO.BinaryReaderBenchmarks.CustomBinaryReaderRead --job Default --benchmarkId 1 in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\bin\Release\net9.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.14.0
// Runtime=.NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 156300.00 ns, 156.3000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.UnauthorizedAccessException: MemoryStream's internal buffer cannot be accessed.
   at System.IO.MemoryStream.GetBuffer()
   at Reaganism.IO.BinaryReader.InternalReadSpan(Stream stream, Int32 count) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.IO\BinaryReader.cs:line 174
   at Reaganism.IO.BinaryReader.InternalRead(Span`1 buffer, Stream stream, Boolean isMemoryStream) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.IO\BinaryReader.cs:line 156
   at Reaganism.Benchmarks.IO.BinaryReaderBenchmarks.CustomBinaryReaderRead() in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\IO\BinaryReaderBenchmarks.cs:line 48
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\82aff6d2-f349-4d09-89e4-8630ece90b96.notcs:line 503
   at BenchmarkDotNet.Engines.Engine.Measure(Action`1 action, Int64 invokeCount)
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\82aff6d2-f349-4d09-89e4-8630ece90b96.notcs:line 368
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\82aff6d2-f349-4d09-89e4-8630ece90b96.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 29744 has exited with code -1.

// ** Remained 2 (50.0%) benchmark(s) to run. Estimated finish 2024-12-05 23:02 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: BinaryReaderBenchmarks.CustomBinaryReaderLeRead: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 82aff6d2-f349-4d09-89e4-8630ece90b96.dll --anonymousPipes 1512 1516 --benchmarkName Reaganism.Benchmarks.IO.BinaryReaderBenchmarks.CustomBinaryReaderLeRead --job Default --benchmarkId 2 in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\bin\Release\net9.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.14.0
// Runtime=.NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 160300.00 ns, 160.3000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.UnauthorizedAccessException: MemoryStream's internal buffer cannot be accessed.
   at System.IO.MemoryStream.GetBuffer()
   at Reaganism.IO.BinaryReader.InternalReadSpan(Stream stream, Int32 count) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.IO\BinaryReader.cs:line 174
   at Reaganism.IO.BinaryReader.InternalRead(Span`1 buffer, Stream stream, Boolean isMemoryStream) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.IO\BinaryReader.cs:line 156
   at Reaganism.Benchmarks.IO.BinaryReaderBenchmarks.CustomBinaryReaderLeRead() in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\IO\BinaryReaderBenchmarks.cs:line 62
   at BenchmarkDotNet.Autogenerated.Runnable_2.WorkloadActionNoUnroll(Int64 invokeCount) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\82aff6d2-f349-4d09-89e4-8630ece90b96.notcs:line 695
   at BenchmarkDotNet.Engines.Engine.Measure(Action`1 action, Int64 invokeCount)
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_2.Run(IHost host, String benchmarkName) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\82aff6d2-f349-4d09-89e4-8630ece90b96.notcs:line 560
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\82aff6d2-f349-4d09-89e4-8630ece90b96.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 33140 has exited with code -1.

// ** Remained 1 (25.0%) benchmark(s) to run. Estimated finish 2024-12-05 23:02 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: BinaryReaderBenchmarks.CustomBinaryReaderBeRead: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 82aff6d2-f349-4d09-89e4-8630ece90b96.dll --anonymousPipes 1384 1368 --benchmarkName Reaganism.Benchmarks.IO.BinaryReaderBenchmarks.CustomBinaryReaderBeRead --job Default --benchmarkId 3 in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\bin\Release\net9.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.14.0
// Runtime=.NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 151800.00 ns, 151.8000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.UnauthorizedAccessException: MemoryStream's internal buffer cannot be accessed.
   at System.IO.MemoryStream.GetBuffer()
   at Reaganism.IO.BinaryReader.InternalReadSpan(Stream stream, Int32 count) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.IO\BinaryReader.cs:line 174
   at Reaganism.IO.BinaryReader.InternalRead(Span`1 buffer, Stream stream, Boolean isMemoryStream) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.IO\BinaryReader.cs:line 156
   at Reaganism.Benchmarks.IO.BinaryReaderBenchmarks.CustomBinaryReaderBeRead() in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\IO\BinaryReaderBenchmarks.cs:line 76
   at BenchmarkDotNet.Autogenerated.Runnable_3.WorkloadActionNoUnroll(Int64 invokeCount) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\82aff6d2-f349-4d09-89e4-8630ece90b96.notcs:line 887
   at BenchmarkDotNet.Engines.Engine.Measure(Action`1 action, Int64 invokeCount)
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_3.Run(IHost host, String benchmarkName) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\82aff6d2-f349-4d09-89e4-8630ece90b96.notcs:line 752
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\stephen\Documents\GitHub\stdlib\src\Reaganism.Benchmarks\bin\Release\net9.0\82aff6d2-f349-4d09-89e4-8630ece90b96\82aff6d2-f349-4d09-89e4-8630ece90b96.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 38344 has exited with code -1.

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2024-12-05 23:02 (0h 0m from now) **
Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Reaganism.Benchmarks.IO.BinaryReaderBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\Reaganism.Benchmarks.IO.BinaryReaderBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\Reaganism.Benchmarks.IO.BinaryReaderBenchmarks-report.html

// * Detailed results *
BinaryReaderBenchmarks.NetBinaryReaderRead: DefaultJob
Runtime = .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 705.873 μs, StdErr = 3.314 μs (0.47%), N = 22, StdDev = 15.545 μs
Min = 686.717 μs, Q1 = 695.335 μs, Median = 700.215 μs, Q3 = 714.576 μs, Max = 748.445 μs
IQR = 19.241 μs, LowerFence = 666.473 μs, UpperFence = 743.437 μs
ConfidenceInterval = [693.216 μs; 718.531 μs] (CI 99.9%), Margin = 12.657 μs (1.79% of Mean)
Skewness = 0.99, Kurtosis = 3.24, MValue = 2
-------------------- Histogram --------------------
[679.436 μs ; 705.345 μs) | @@@@@@@@@@@@@@
[705.345 μs ; 727.461 μs) | @@@@@@@
[727.461 μs ; 755.726 μs) | @
---------------------------------------------------

BinaryReaderBenchmarks.CustomBinaryReaderRead: DefaultJob
Runtime = .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

BinaryReaderBenchmarks.CustomBinaryReaderLeRead: DefaultJob
Runtime = .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

BinaryReaderBenchmarks.CustomBinaryReaderBeRead: DefaultJob
Runtime = .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2; GC = Concurrent Workstation
There are not any results runs

// * Summary *

BenchmarkDotNet v0.14.0, Windows 11 (10.0.22631.4460/23H2/2023Update/SunValley3)
AMD Ryzen 7 5700G with Radeon Graphics, 1 CPU, 16 logical and 8 physical cores
.NET SDK 9.0.100
  [Host]     : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2
  DefaultJob : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2


| Method                   | Mean     | Error    | StdDev   | Ratio | RatioSD | Allocated | Alloc Ratio |
|------------------------- |---------:|---------:|---------:|------:|--------:|----------:|------------:|
| NetBinaryReaderRead      | 705.9 μs | 12.66 μs | 15.54 μs |  1.00 |    0.03 |     120 B |        1.00 |
| CustomBinaryReaderRead   |       NA |       NA |       NA |     ? |       ? |        NA |           ? |
| CustomBinaryReaderLeRead |       NA |       NA |       NA |     ? |       ? |        NA |           ? |
| CustomBinaryReaderBeRead |       NA |       NA |       NA |     ? |       ? |        NA |           ? |

Benchmarks with issues:
  BinaryReaderBenchmarks.CustomBinaryReaderRead: DefaultJob
  BinaryReaderBenchmarks.CustomBinaryReaderLeRead: DefaultJob
  BinaryReaderBenchmarks.CustomBinaryReaderBeRead: DefaultJob

// * Warnings *
Environment
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - Windows Defender (windowsdefender://)
Use InProcessEmitToolchain or InProcessNoEmitToolchain to avoid new process creation.

BaselineCustomAnalyzer
  Summary -> A question mark '?' symbol indicates that it was not possible to compute the (Ratio, RatioSD, Alloc Ratio) column(s) because the baseline value is too close to zero.

// * Hints *
Outliers
  BinaryReaderBenchmarks.NetBinaryReaderRead: Default -> 1 outlier  was  removed (753.19 μs)

// * Legends *
  Mean        : Arithmetic mean of all measurements
  Error       : Half of 99.9% confidence interval
  StdDev      : Standard deviation of all measurements
  Ratio       : Mean of the ratio distribution ([Current]/[Baseline])
  RatioSD     : Standard deviation of the ratio distribution ([Current]/[Baseline])
  Allocated   : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  Alloc Ratio : Allocated memory ratio distribution ([Current]/[Baseline])
  1 μs        : 1 Microsecond (0.000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:26 (26.73 sec), executed benchmarks: 4

Global total time: 00:00:34 (34.31 sec), executed benchmarks: 4
// * Artifacts cleanup *
Artifacts cleanup is finished
